<?xml version="1.0"?>
<!--
  Geometry:
    The Ackermann steering controllers require the longitudinal
    separation between the front and back wheel axes and the
    lateral separation between the left and right front steering axes.
    
    For this model:
    wheel_separation_h = base_length - 2 * axle_offset (wheel_base_length)
    wheel_separation_w = base_width  + 2 * axle_offset (wheel_base_width)
-->
<robot name="racebot" xmlns:xacro="http://wiki.ros.org/xacro">
  <!-- Include xacro for inertials, materials and wheels -->
  <xacro:include filename="$(find car_description)/urdf/steer_base/wheel.xacro" />

  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:arg name="lidar_visual" default="true" />

  <!-- Gazebo plugins -->
  <gazebo>
    <!-- Load ros_control plugin using the steer_bot_hardware_gazebo
    implementation of the hardware_interface::RobotHW -->
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotSimType>steer_bot_hardware_gazebo/SteerBotHardwareGazebo</robotSimType>
      <legacyModeNS>false</legacyModeNS>
    </plugin>
  </gazebo>

  <!-- Math constants -->
  <xacro:property name="deg_to_rad" value="0.01745329251994329577" />

  <!-- Robot base dimensions -->
  <xacro:property name="base_length" value="3.452" />
  <xacro:property name="base_width" value="1.6" />
  <xacro:property name="base_height" value="0.6" />
  <xacro:property name="base_mass" value="1620" />

  <!-- Wheel link dimensions -->
  <xacro:property name="wheel_radius" value="0.36" />
  <xacro:property name="wheel_thickness" value="0.25" />
  <xacro:property name="wheel_mass" value="40" />

  <!-- Steering link dimensions -->
  <xacro:property name="steer_radius" value="0.15" />
  <xacro:property name="steer_thickness" value="0.10" />
  <xacro:property name="steer_mass" value="20" />

  <!-- Axle positions -->
  <xacro:property name="axle_offset" value="0.3" />
  <xacro:property name="steer_offset" value="0.02" />

  <link name="base_footprint" />
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint" />
    <child link="base_link" />
    <origin xyz="0 0 0.3" rpy="0 0 0" />
  </joint>

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}" />
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial rpy="0 0 0" xyz="0 0 0" mass="${base_mass}" x="${base_length}" y="${base_width}" z="${base_height}" />
  </link>

  <!-- Front steer and rear wheel joints required for ackermann_steering_controller -->
  <xacro:front_steer name="front" parent="base" steer_radius="${steer_radius}" steer_thickness="${steer_thickness}"
    steer_mass="${steer_mass}" base_length="${base_length}" base_width="${base_width}" axle_offset="${axle_offset}"
    steer_height="${wheel_radius+steer_offset}"></xacro:front_steer>

  <!-- Rear Link -->
  <xacro:rear_wheel name="rear" parent="base" wheel_radius="${wheel_radius/4}" wheel_thickness="${wheel_thickness/2}" wheel_mass="${wheel_mass/32}">
    <origin xyz="${-base_length/2+axle_offset} 0 0" rpy="${-90 * deg_to_rad} 0 0" />
  </xacro:rear_wheel>

  <!-- Steerable front wheels -->
  <xacro:front_wheel_lr name="front_right" parent="base" reflect="-1" wheel_radius="${wheel_radius}" wheel_thickness="${wheel_thickness}"
    wheel_mass="${wheel_mass}" steer_radius="${steer_radius}" steer_thickness="${steer_thickness}" steer_mass="${steer_mass}"
    base_length="${base_length}" base_width="${base_width}" axle_offset="${axle_offset}" steer_height="${wheel_radius+steer_offset}"></xacro:front_wheel_lr>

  <xacro:front_wheel_lr name="front_left" parent="base" reflect="1" wheel_radius="${wheel_radius}" wheel_thickness="${wheel_thickness}"
    wheel_mass="${wheel_mass}" steer_radius="${steer_radius}" steer_thickness="${steer_thickness}" steer_mass="${steer_mass}"
    base_length="${base_length}" base_width="${base_width}" axle_offset="${axle_offset}" steer_height="${wheel_radius+steer_offset}"></xacro:front_wheel_lr>

  <!-- Rear wheels -->
  <xacro:rear_wheel_lr name="rear_right" parent="base" wheel_radius="${wheel_radius}" wheel_thickness="${wheel_thickness}" wheel_mass="${wheel_mass}">
    <origin xyz="${-base_length/2+axle_offset} ${-base_width/2-axle_offset} 0" rpy="${-90 * deg_to_rad} 0 0" />
  </xacro:rear_wheel_lr>

  <xacro:rear_wheel_lr name="rear_left" parent="base" wheel_radius="${wheel_radius}" wheel_thickness="${wheel_thickness}" wheel_mass="${wheel_mass}">
    <origin xyz="${-base_length/2+axle_offset} ${+base_width/2+axle_offset} 0" rpy="${-90 * deg_to_rad} 0 0" />
  </xacro:rear_wheel_lr>

  <!-- Colour -->
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>

  <link name="lidar">
    <visual>
      <geometry>
        <cylinder radius="0.03" length="0.06" />
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <material name="black">
        <color rgba="0.0 0.0 0.0 1.0" />
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.03" length="0.06" />
      </geometry>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </collision>
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="0.1" />
      <inertia ixx="6.64E-04" ixy="0" ixz="0" iyy="6.64E-04" iyz="0" izz="1.02E-03" />
    </inertial>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link" />
    <child link="lidar" />
    <origin xyz="0.0 0 1.1" />
    <axis xyz="0 0 1" />
  </joint>

  <gazebo reference="lidar">
    <material>Gazebo/Grey</material>
    <sensor type="ray" name="hokuyo_sensor">
      <pose>0 0 0.0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>500</samples> <!-- Change this to 500 if gazebo keeps timing out -->
            <resolution>1</resolution>
            <min_angle>-${M_PI}</min_angle>
            <max_angle> ${M_PI}</max_angle>
          </horizontal>
          <!-- <vertical>
            <samples>16</samples>
            <resolution>2</resolution>
            <min_angle>-${15*M_PI/180.0}</min_angle>
            <max_angle> ${15*M_PI/180.0}</max_angle>
          </vertical> -->
        </scan>
        <range>
          <min>0.05</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>